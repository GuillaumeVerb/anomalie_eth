name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Show requirements
      run: cat requirements.txt
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest==7.4.3 pytest-cov==4.1.0
        
    - name: Show debug information
      run: |
        python --version
        pip list
        pip check
        python -c "import sys; print('Python path:', sys.path)"
        python -c "import os; print('Working directory:', os.getcwd())"
        
    - name: Show test files
      run: |
        echo "Content of test_modeling.py:"
        cat tests/test_modeling.py
        echo -e "\nContent of test_preprocessing.py:"
        cat tests/test_preprocessing.py
        
    - name: Create directories
      run: |
        mkdir -p data/raw
        mkdir -p data/processed
        mkdir -p models
        ls -R data/
        
    - name: Run tests
      run: |
        PYTHONPATH=$PYTHONPATH:$(pwd) python -m pytest tests/ -v --disable-pytest-warnings --tb=long
        
  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/ethereum-anomaly:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/ethereum-anomaly:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/ethereum-anomaly:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/ethereum-anomaly:buildcache,mode=max 